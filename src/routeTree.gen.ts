/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as WritingSystemsIndexImport } from './routes/writing-systems/index'
import { Route as ChapterIndexImport } from './routes/chapter/index'
import { Route as WritingSystemsHiraganaImport } from './routes/writing-systems/hiragana'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WritingSystemsIndexRoute = WritingSystemsIndexImport.update({
  path: '/writing-systems/',
  getParentRoute: () => rootRoute,
} as any)

const ChapterIndexRoute = ChapterIndexImport.update({
  path: '/chapter/',
  getParentRoute: () => rootRoute,
} as any)

const WritingSystemsHiraganaRoute = WritingSystemsHiraganaImport.update({
  path: '/writing-systems/hiragana',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/writing-systems/hiragana': {
      id: '/writing-systems/hiragana'
      path: '/writing-systems/hiragana'
      fullPath: '/writing-systems/hiragana'
      preLoaderRoute: typeof WritingSystemsHiraganaImport
      parentRoute: typeof rootRoute
    }
    '/chapter/': {
      id: '/chapter/'
      path: '/chapter'
      fullPath: '/chapter'
      preLoaderRoute: typeof ChapterIndexImport
      parentRoute: typeof rootRoute
    }
    '/writing-systems/': {
      id: '/writing-systems/'
      path: '/writing-systems'
      fullPath: '/writing-systems'
      preLoaderRoute: typeof WritingSystemsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/writing-systems/hiragana': typeof WritingSystemsHiraganaRoute
  '/chapter': typeof ChapterIndexRoute
  '/writing-systems': typeof WritingSystemsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/writing-systems/hiragana': typeof WritingSystemsHiraganaRoute
  '/chapter': typeof ChapterIndexRoute
  '/writing-systems': typeof WritingSystemsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/writing-systems/hiragana': typeof WritingSystemsHiraganaRoute
  '/chapter/': typeof ChapterIndexRoute
  '/writing-systems/': typeof WritingSystemsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/writing-systems/hiragana' | '/chapter' | '/writing-systems'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/writing-systems/hiragana' | '/chapter' | '/writing-systems'
  id:
    | '__root__'
    | '/'
    | '/writing-systems/hiragana'
    | '/chapter/'
    | '/writing-systems/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WritingSystemsHiraganaRoute: typeof WritingSystemsHiraganaRoute
  ChapterIndexRoute: typeof ChapterIndexRoute
  WritingSystemsIndexRoute: typeof WritingSystemsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WritingSystemsHiraganaRoute: WritingSystemsHiraganaRoute,
  ChapterIndexRoute: ChapterIndexRoute,
  WritingSystemsIndexRoute: WritingSystemsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/writing-systems/hiragana",
        "/chapter/",
        "/writing-systems/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/writing-systems/hiragana": {
      "filePath": "writing-systems/hiragana.tsx"
    },
    "/chapter/": {
      "filePath": "chapter/index.tsx"
    },
    "/writing-systems/": {
      "filePath": "writing-systems/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
